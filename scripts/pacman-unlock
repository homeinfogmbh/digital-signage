#! /usr/bin/env python3
"""Unlock blocked pacman databases."""

from logging import INFO, basicConfig, getLogger
from subprocess import CalledProcessError, check_output
from pathlib import Path


__all__ = ['unlock']


LOCKFILE = Path('/var/lib/pacman/db.lck')
LOGGER = getLogger(Path(__file__).name)
LOG_FORMAT = '[%(levelname)s] %(name)s: %(message)s'
PACMAN = 'pacman'
PIDOF = '/bin/pidof'


class PacmanRunning(OSError):
    """Indicates that pacman is still running."""


def pidof(procname: str) -> set[int]:
    """Returns the PID of the respective process."""

    try:
        return set(map(int, check_output([PIDOF, procname], text=True).split()))
    except CalledProcessError:
        return set()


def unlock() -> bool:
    """Unlock pacman lockfile."""

    if not LOCKFILE.is_file():
        return False

    if pidof(PACMAN):
        raise PacmanRunning()

    LOCKFILE.unlink(missing_ok=True)
    return True


def main() -> None:
    """Runs the script."""

    basicConfig(format=LOG_FORMAT, level=INFO)

    try:
        if unlock():
            LOGGER.info('Removed orphaned pacman lock file.')
    except PacmanRunning:
        LOGGER.error('Cannot remove pacman lock file - pacman is running.')


if __name__ == '__main__':
    main()
